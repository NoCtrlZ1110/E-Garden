swagger: "2.0"
basePath: /api
info:
  title: Sample API
  description: API description in Markdown.
  version: 1.0.0
host: api.example.com
tags:
- name: users
  description: users API

paths:
# [GET] users
  /users:
    get:
      tags: 
      - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [POST] users
    post:
      tags:
      - users
      summary: Add User
      parameters:
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] users/id
  /users/{id}:
    get:
      tags:
      - users
      summary: Find User By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
        type: string
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] users/id
    put:
      tags:
      - users
      summary: Update User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: string
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] users/id
    delete:
      tags:
      - users
      summary: Delete User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
        type: string
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
  /notes:
      get:
        tags: 
        - Notes
        summary: Find All Note
        parameters:
        - name: userId
          in: path
          description: User Id
          required: true
          type: string
        responses:
          200:
            description: 'OK'
          500:
            description: 'Server Error'

  # [POST] users
      post:
        tags:
        - Notes
        summary: Add Note
        parameters:
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/notes'
        responses:
          201:
            description: 'Created'
          400:
            description: 'Bad Request'
          409:
            description: 'Conflict'
          500:
            description: 'Server Error'

  # [GET] notes/id
  /notes/{id}:
      get:
        tags:
        - Notes
        summary: Find User By Id
        parameters:
        - name: id
          in: path
          description: Note Id
          required: true
          type: string
        responses:
          200:
            description: 'OK'
          409:
            description: 'Conflict'
          500:
            description: 'Server Error'

  # [PUT] users/id
      put:
        tags:
        - Notes
        summary: Update User By Id
        parameters:
        - name: id
          in: path
          description: user Id
          required: true
          type: string
        - name: body
          in: body
          description: user Data
          required: true
          schema:
            $ref: '#/definitions/notes'
        responses:
          200:
            description: 'OK'
          400:
            description: 'Bad Request'
          409:
            description: 'Conflict'
          500:
            description: 'Server Error'

  # [DELETE] users/id
      delete:
        tags:
        - Notes
        summary: Delete User By Id
        parameters:
        - name: id
          in: path
          description: user Id
          required: true
          type: string
        responses:
          200:
            description: 'OK'
          409:
            description: 'Conflict'
          500:
            description: 'Server Error'
# definitions
definitions:
  notes:
    type: object
    properties:
      id:
        type: integer
        description: note Id
      userId:
        type: integer
        description: user Id
      title:
        type: string
        description: title
      content:
        type: string
      date:
        type: "string"
        format: "date-time"
      status:
        type: boolean
  users:
    type: object
    required:
        - email
        - password
    properties:
      id:
        type: integer
        description: user Id
      email:
        type: string
        description: user Email
      password:
        type: string
        description: user Password

schemes:
 - https
 - http
